@model X.PagedList.IPagedList<Appointments.Api.Areas.Admin.Models.ExpandedUserDTO>
@using X.PagedList.Mvc;
@using X.PagedList;
@using Appointments.Api.Utils;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Roles";
}

<h2>Roles</h2>
<p>
    @Html.ActionLink("Back to User List", "Index", "User", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Add Role", "Add", "Role", null, new { @class = "btn btn-default" })
</p>
<br />

@*@using (Html.BeginForm("Index", "User", FormMethod.Get)) {
    <div class="form-group">
        <label>Search:</label>
        @Html.TextBox("searchStringUserNameOrEmail", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </div>
}
<br />*@
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Role</th>
            <th></th>
        </tr>
    </thead>

    @foreach (var item in ViewBag.Roles) {
        <tr>
            <td>@item.RoleName</td>
            <td>
                @if (item.RoleName.ToLower() != AppRoles.Admin.ToLower()) {
                    @Html.ActionLink("Delete", "Delete", new { roleName = item.RoleName }, new { onclick = "return confirm('Are you sure you wish to delete this role?');" })
                }
            </td>
        </tr>
    }
</table>
@Html.PagedListPager((IPagedList)ViewBag.Roles, page => Url.Action("Index", new { page }))

