<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Appointments.Api</name>
    </assembly>
    <members>
        <member name="T:Appointments.Api.ApplicationUserManager">
            <summary>
            ApplicationUserManager
            </summary>
        </member>
        <member name="M:Appointments.Api.ApplicationUserManager.#ctor(Microsoft.AspNet.Identity.IUserStore{Appointments.Api.Models.ApplicationUser})">
            <summary>
            Constructor
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:Appointments.Api.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{Appointments.Api.ApplicationUserManager},Microsoft.Owin.IOwinContext)">
            <summary>
            Create a new User
            </summary>
            <param name="options">options</param>
            <param name="context">owin context</param>
            <returns></returns>
        </member>
        <member name="P:Appointments.Api.Startup.OAuthOptions">
            <summary>
            OAuthOptions
            </summary>
        </member>
        <member name="P:Appointments.Api.Startup.PublicClientId">
            <summary>
            Public Client Id
            </summary>
        </member>
        <member name="M:Appointments.Api.Startup.ConfigureAuth(Owin.IAppBuilder)">
            <summary>
            ConfigureAuth
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Appointments.Api.WebApiConfig.VersioningConfig">
            <summary>
            Config webapi for the versioning
            </summary>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Appointments.Api.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Appointments.Api.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Appointments.Api.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Appointments.Api.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Appointments.Api.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Appointments.Api.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Appointments.Api.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Appointments.Api.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Appointments.Api.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Appointments.Api.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Appointments.Api.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Appointments.Api.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.#ctor(Appointments.Api.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Appointments.Api.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Appointments.Api.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Appointments.Api.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Appointments.Api.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Appointments.Api.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Appointments.Api.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Appointments.Api.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Appointments.Api.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:Appointments.Api.Controllers.AccountController">
            <summary>
            Account Controller
            </summary>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.#ctor(Appointments.Api.ApplicationUserManager,Microsoft.Owin.Security.ISecureDataFormat{Microsoft.Owin.Security.AuthenticationTicket})">
            <summary>
            Constructor with Parameters
            </summary>
            <param name="userManager">User Manager</param>
            <param name="accessTokenFormat">Format of the Token</param>
        </member>
        <member name="P:Appointments.Api.Controllers.AccountController.UserManager">
            <summary>
            User Manager
            </summary>
        </member>
        <member name="P:Appointments.Api.Controllers.AccountController.AccessTokenFormat">
            <summary>
            Access Token Format
            </summary>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.GetUserInfo">
            <summary>
            Get User Info
            </summary>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.Logout">
            <summary>
            Logout
            </summary>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.GetManageInfo(System.String,System.Boolean)">
            <summary>
            Manage Infor
            </summary>
            <param name="returnUrl">return url</param>
            <param name="generateState">true: generate state, false: don't</param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.ChangePassword(Appointments.Api.Models.ChangePasswordBindingModel)">
            <summary>
            ChangePassword
            </summary>
            <param name="model">Change Password model</param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.SetPassword(Appointments.Api.Models.SetPasswordBindingModel)">
            <summary>
            Set Password
            </summary>
            <param name="model">Set Password model</param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.AddExternalLogin(Appointments.Api.Models.AddExternalLoginBindingModel)">
            <summary>
            Add External Login
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.RemoveLogin(Appointments.Api.Models.RemoveLoginBindingModel)">
            <summary>
            Remove Login
            </summary>
            <param name="model">RemoveLogin model</param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.GetExternalLogin(System.String,System.String)">
            <summary>
            Get External Login
            </summary>
            <param name="provider">provider (Google, Facebook, Twitter)</param>
            <param name="error">error</param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.GetExternalLogins(System.String,System.Boolean)">
            <summary>
            Get all External Logins
            </summary>
            <param name="returnUrl"></param>
            <param name="generateState"></param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.Register(Appointments.Api.Models.RegisterBindingModel)">
            <summary>
            Register
            </summary>
            <param name="model">Register model</param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.RegisterWithRole(Appointments.Api.Models.RegisterWithRoleBindingModel)">
            <summary>
            (Admin) Register a user with a particular role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.RegisterExternal(Appointments.Api.Models.RegisterExternalBindingModel)">
            <summary>
            RegisterExternal
            </summary>
            <param name="model">RegisterExternal model</param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Controllers.AccountController.Dispose(System.Boolean)">
            <summary>
            Dispose method
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Appointments.Api.Controllers.HomeController">
            <summary>
            Home Controller
            </summary>
        </member>
        <member name="M:Appointments.Api.Controllers.HomeController.Index">
            <summary>
            Index Action
            </summary>
            <returns>Home Page</returns>
        </member>
        <member name="T:Appointments.Api.Controllers.PeopleController">
            <summary>
            People Controller
            </summary>
        </member>
        <member name="M:Appointments.Api.Controllers.PeopleController.#ctor(Appointments.Api.Repositories.IRepository{Appointments.Api.Models.Person})">
            <summary>
            Initialize Controller
            </summary>
            <param name="peopleRepository">people repository</param>
        </member>
        <member name="M:Appointments.Api.Controllers.PeopleController.Get">
            <summary>
            Get all people
            </summary>
            <returns>List of all <see cref="T:Appointments.Api.Models.Person"/> registered </returns>
        </member>
        <member name="M:Appointments.Api.Controllers.PeopleController.Get(System.String)">
            <summary>
            Get a person by its username
            </summary>
            <param name="username">email</param>
            <returns></returns>
        </member>
        <member name="T:Appointments.Api.Models.AddExternalLoginBindingModel">
            <summary>
            AddExternalLoginBindingModel
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.AddExternalLoginBindingModel.ExternalAccessToken">
            <summary>
            External Access Token
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.ChangePasswordBindingModel">
            <summary>
            ChangePasswordBindingModel
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.ChangePasswordBindingModel.OldPassword">
            <summary>
            Old Password
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.ChangePasswordBindingModel.NewPassword">
            <summary>
            New Password
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.ChangePasswordBindingModel.ConfirmPassword">
            <summary>
            Confirm Password
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.RegisterBindingModel">
            <summary>
            RegisterBindingModel
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RegisterBindingModel.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RegisterBindingModel.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RegisterBindingModel.ConfirmPassword">
            <summary>
            Confirm Password
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.RegisterWithRoleBindingModel">
            <summary>
            RegisterWithRoleBindingModel
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RegisterWithRoleBindingModel.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RegisterWithRoleBindingModel.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RegisterWithRoleBindingModel.ConfirmPassword">
            <summary>
            Confirm Password
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RegisterWithRoleBindingModel.Role">
            <summary>
            Role: Admin / Manager / Client
            <see cref="T:Appointments.Api.Utils.AppRoles"/>
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.RegisterExternalBindingModel">
            <summary>
            RegisterExternalBindingModel
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RegisterExternalBindingModel.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.RemoveLoginBindingModel">
            <summary>
            RemoveLoginBindingModel
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RemoveLoginBindingModel.LoginProvider">
            <summary>
            LoginProvider
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.RemoveLoginBindingModel.ProviderKey">
            <summary>
            ProviderKey
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.SetPasswordBindingModel">
            <summary>
            SetPasswordBindingModel
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.SetPasswordBindingModel.NewPassword">
            <summary>
            New Password
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.SetPasswordBindingModel.ConfirmPassword">
            <summary>
            Confirm Password
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.DTO.PersonDTO">
            <summary>
            Person Simplified model
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonDTO.Id">
            <summary>
            Person Identifier
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonDTO.Email">
            <summary>
            Email is also identifier
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonDTO.PhoneNumber">
            <summary>
            Phone Number
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonDTO.UserName">
            <summary>
            User Name
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonDTO.FirstName">
            <summary>
            First Name
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonDTO.LastName">
            <summary>
            Last Name
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.DTO.PersonExtendedDTO">
            <summary>
            Person with all data
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.Id">
            <summary>
            Person Identifier
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.Email">
            <summary>
            Email is also identifier
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.PhoneNumber">
            <summary>
            Phone Number
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.UserName">
            <summary>
            User Name
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.FirstName">
            <summary>
            First Name
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.LastName">
            <summary>
            Last Name
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.Address1">
            <summary>
            First line of Address
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.Address2">
            <summary>
            Second line of Address
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.ZipCode">
            <summary>
            Postal Code
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.State">
            <summary>
            State, if any
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.DTO.PersonExtendedDTO.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.ApplicationUser">
            <summary>
            Application User
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.ApplicationUser.Person">
            <summary>
            Contains detailed user information
            </summary>
        </member>
        <member name="M:Appointments.Api.Models.ApplicationUser.GenerateUserIdentityAsync(Microsoft.AspNet.Identity.UserManager{Appointments.Api.Models.ApplicationUser},System.String)">
            <summary>
            Generate UserIdentity Asynchronously
            </summary>
            <param name="manager">user manager</param>
            <param name="authenticationType"></param>
            <returns></returns>
        </member>
        <member name="T:Appointments.Api.Models.ApplicationDbContext">
            <summary>
            ApplicationDbContext
            </summary>
        </member>
        <member name="M:Appointments.Api.Models.ApplicationDbContext.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Appointments.Api.Models.ApplicationDbContext.Create">
            <summary>
            Creates Db Context
            </summary>
            <returns></returns>
        </member>
        <member name="P:Appointments.Api.Models.ApplicationDbContext.Persons">
            <summary>
            Database set of Persons
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.ApplicationDbContext.UserAddresses">
            <summary>
            Database set of User Addresses
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.Person">
            <summary>
            User Personal information
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.Person.Id">
            <summary>
            UserName
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.Person.Gender">
            <summary>
            Mr. Ms. Mrs.
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.Person.FirstName">
            <summary>
            First Name
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.Person.LastName">
            <summary>
            Last Name
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.Person.Address">
            <summary>
            Complex Address
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.Person.ApplicationUser">
            <summary>
            Application User (technical)
            </summary>
        </member>
        <member name="T:Appointments.Api.Models.UserAddress">
            <summary>
            Full Address of a user
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.UserAddress.Id">
            <summary>
            UserName
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.UserAddress.Address1">
            <summary>
            Address first line
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.UserAddress.Address2">
            <summary>
            Address second line
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.UserAddress.City">
            <summary>
            City
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.UserAddress.Zipcode">
            <summary>
            Zip Code
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.UserAddress.State">
            <summary>
            State of the Country
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.UserAddress.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="P:Appointments.Api.Models.UserAddress.Person">
            <summary>
            Link to User Information
            </summary>
        </member>
        <member name="P:Appointments.Api.Repositories.GenericRepository`1.Context">
            <summary>
            Entity context to use
            </summary>
        </member>
        <member name="P:Appointments.Api.Repositories.GenericRepository`1.DbSet">
            <summary>
            Current Entity DbSet
            </summary>
        </member>
        <member name="M:Appointments.Api.Repositories.GenericRepository`1.#ctor(Appointments.Api.Models.ApplicationDbContext)">
            <summary>
            Constructor of the repository
            </summary>
            <param name="dbContext">Context to use for Entity Framework</param>
        </member>
        <member name="M:Appointments.Api.Repositories.GenericRepository`1.Add(`0)">
            <summary>
            Insert a new element in Repository
            </summary>
            <param name="entity">element to add</param>
        </member>
        <member name="M:Appointments.Api.Repositories.GenericRepository`1.Delete(`0)">
            <summary>
            Delete an element from Repository
            </summary>
            <param name="entity">element to delete</param>
        </member>
        <member name="M:Appointments.Api.Repositories.GenericRepository`1.Delete(System.Int32)">
            <summary>
            Delete an element by its identifier
            </summary>
            <param name="id">identifier of the element</param>
        </member>
        <member name="M:Appointments.Api.Repositories.GenericRepository`1.Update(`0)">
            <summary>
            Updates an existing element
            </summary>
            <param name="entity">element with updated values</param>
        </member>
        <member name="M:Appointments.Api.Repositories.GenericRepository`1.GetById(System.Int64)">
            <summary>
            Finds an entity with the given primary key values. If an entity with the given
                primary key values exists in the context, then it is returned immediately without
                making a request to the store. Otherwise, a request is made to the store for
                an entity with the given primary key values and this entity, if found, is attached
                to the context and returned. If no entity is found in the context or the store,
                then null is returned.
            </summary>
            <param name="Id">The value of the primary key for the entity to be found</param>
            <returns>The entity found, or null</returns>
        </member>
        <member name="M:Appointments.Api.Repositories.GenericRepository`1.All">
            <summary>
            Returns all entities
            </summary>
            <returns>Queryable list of entities</returns>
        </member>
        <member name="M:Appointments.Api.Repositories.GenericRepository`1.Find(System.Func{`0,System.Boolean})">
            <summary>
            Finds all elements matching the predicate
            </summary>
            <param name="predicate">predicate to filter entities</param>
            <returns></returns>
        </member>
        <member name="M:Appointments.Api.Repositories.GenericRepository`1.Dispose">
            <summary>
            Dispose the repository
            </summary>
        </member>
        <member name="T:Appointments.Api.Repositories.IRepository`1">
            <summary>
            Generic Repository Interface
            </summary>
            <typeparam name="T">Type of the repository</typeparam>
        </member>
        <member name="M:Appointments.Api.Repositories.IRepository`1.Add(`0)">
            <summary>
            Insert a new element in Repository
            </summary>
            <param name="entity">element to add</param>
        </member>
        <member name="M:Appointments.Api.Repositories.IRepository`1.Delete(`0)">
            <summary>
            Delete an element from Repository
            </summary>
            <param name="entity">element to delete</param>
        </member>
        <member name="M:Appointments.Api.Repositories.IRepository`1.Delete(System.Int32)">
            <summary>
            Delete an element by its identifier
            </summary>
            <param name="id">identifier of the element</param>
        </member>
        <member name="M:Appointments.Api.Repositories.IRepository`1.Update(`0)">
            <summary>
            Updates an existing element
            </summary>
            <param name="entity">element with updated values</param>
        </member>
        <member name="M:Appointments.Api.Repositories.IRepository`1.GetById(System.Int64)">
            <summary>
            Finds an entity with the given primary key values. If an entity with the given
                primary key values exists in the context, then it is returned immediately without
                making a request to the store. Otherwise, a request is made to the store for
                an entity with the given primary key values and this entity, if found, is attached
                to the context and returned. If no entity is found in the context or the store,
                then null is returned.
            </summary>
            <param name="Id">The value of the primary key for the entity to be found</param>
            <returns>The entity found, or null</returns>
        </member>
        <member name="M:Appointments.Api.Repositories.IRepository`1.All">
            <summary>
            Returns all entities
            </summary>
            <returns>Queryable list of entities</returns>
        </member>
        <member name="M:Appointments.Api.Repositories.IRepository`1.Find(System.Func{`0,System.Boolean})">
            <summary>
            Finds all elements matching the predicate
            </summary>
            <param name="predicate">predicate to filter entities</param>
            <returns></returns>
        </member>
        <member name="T:Appointments.Api.Utils.AppRoles">
            <summary>
            Application Roles
            </summary>
        </member>
        <member name="F:Appointments.Api.Utils.AppRoles.Admin">
            <summary>
            Administrator Role
            </summary>
        </member>
        <member name="F:Appointments.Api.Utils.AppRoles.Manager">
            <summary>
            Manager Role
            </summary>
        </member>
        <member name="F:Appointments.Api.Utils.AppRoles.Client">
            <summary>
            Client Role
            </summary>
        </member>
        <member name="T:Appointments.Api.Versioning.VersionedRoute">
            <summary>
            Provides an attribute route that's restricted to a specific version of the api.
            </summary>
        </member>
    </members>
</doc>
